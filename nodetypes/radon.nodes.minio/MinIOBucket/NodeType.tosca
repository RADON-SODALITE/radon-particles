tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.minio.MinIOBucket:
    derived_from: radon.nodes.abstract.ObjectStorage
    metadata:
      targetNamespace: "radon.nodes.minio"
      abstract: "false"
      final: "false"
    attributes:
      bucket_name:
        description: Name of this MinIO S3 bucket.
        type: string
    properties:
      bucket_name:
        type: string
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: radon.nodes.rpi.RPiPlatform
          relationship: tosca.relationships.HostedOn
          occurrences: [ 0, UNBOUNDED ]
      - invoker:
          capability: radon.capabilities.Invocable
          node: radon.nodes.rpi.RPiFunction
          relationship: radon.relationships.rpi.RPiTriggers
          occurrences: [ 0, UNBOUNDED ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          hostname:
            type: string
            required: true
            default: { get_property: [ SELF, host, hostname ] }
          minio_user:
            type: string
            required: true
            default: { get_property: [ SELF, host, minio_user ] }
          minio_pass:
            type: string
            required: true
            default: { get_property: [ SELF, host, minio_pass ] }
          bucket_name:
            type: string
            required: true
            default: { get_property: [ SELF, name ] }
        operations:
          create:
            implementation:
              primary: create
          delete:
            implementation:
              primary: delete
    artifacts:
      create:
        type: radon.artifacts.Ansible
        file: create.yml
      delete:
        type: radon.artifacts.Ansible
        file: delete.yml
